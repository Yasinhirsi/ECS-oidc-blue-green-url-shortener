name: Docker build and push to ECR

on:
  push:
    branches: [main]
    paths: ['app/**']
  workflow_dispatch:  # manual for testing

permissions:
  id-token: write
  security-events: write

jobs:
  build-push-register:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build the image
        id: build
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: url-shortener
        run: |
          sha=$(git rev-parse --short HEAD)
          primary_tag="$REGISTRY/$REPOSITORY:$sha"
          docker build -t $primary_tag ./app
          echo "primary_tag=$primary_tag" >> $GITHUB_OUTPUT

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.build.outputs.primary_tag }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
          wait-for-processing: true

      - name: Push to Amazon ECR
        run: docker push ${{ steps.build.outputs.primary_tag }}

      - name: Output image details
        run: |
          echo "Docker image built and pushed successfully!"
          echo "Image: ${{ steps.build.outputs.primary_tag }}"
          echo "Tag: $(git rev-parse --short HEAD)"
          echo ""
          echo "Ready for deployment via CodeDeploy workflow"